<?php


namespace Tests\Service;


use Dmitrev\Angrams\Service\FileIterator;
use Tests\TestCase;

class FileIteratorTest extends TestCase
{

    private $file;
    /**
     * @var FileIterator
     */
    private FileIterator $iterator;

    public function testCanGetFirstLine()
    {
        $this->assertEquals('1', $this->iterator->current());
    }

    public function testCallingCurrentMoreThanOnce()
    {
        $this->iterator->current();
        $this->iterator->current();
        $this->iterator->current();
        $this->iterator->current();
        $this->iterator->current();

        $this->assertEquals('1', $this->iterator->current());
    }

    public function testCanGetSecondItem()
    {
        $this->iterator->next();

        $this->assertEquals('2', $this->iterator->current());
    }

    public function testCanRewind()
    {
        $this->iterator->next();
        $this->iterator->next();
        $this->iterator->next();
        $this->iterator->rewind();

        $this->assertEquals('1', $this->iterator->current());
    }

    public function testValid()
    {
        $this->iterator->next();
        $this->iterator->next();
        $this->iterator->next();
        $this->iterator->next();
        $this->iterator->next();

        $this->assertEquals(false, $this->iterator->valid());
    }



    public function setUp(): void
    {
        parent::setUp();

        $path = __DIR__.'/../data/fileiterator.txt';

        if (!file_exists($path)) {
           throw new \RuntimeException("file: {$path} not found");
        }

        $this->file = fopen($path, 'r');
        $this->iterator = new FileIterator($this->file);

    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        fclose($this->file);
    }
}
